# Github Master branch push action deploy
name: deploy to kafka broker
on:
  #  master branch 에 push가 발생했을 때로 정의함
  push:
    branches: [ master ]

  workflow_dispatch:


# job -> step -> action 순서로 정의
jobs:
  build:
    # github에서 제공하는 ubuntu 환경에서 실행
    # runs-on 항목 아래부터 step 정의
    runs-on: ubuntu-latest
    steps:
    - name: checkout release
      # uses: 이미 만들어진 action을 사용할 때 사용
      # actions/checkout@4는 본 레파지토리의 내용을 checkout 하여 runner 서버에 저장함
      uses: actions/checkout@v4

      # secret key 변환
      # application.yml 파일 내 ## 부분을 실제 값으로 변경
    - name: replace application.yml
      env:
        AUTH_KEY_SEOUL_DATA: ${{ secrets.AUTH_KEY_SEOUL_DATA }}
      run: sed -ie "s/##auth_key_seoul_data##/$AUTH_KEY_SEOUL_DATA/g" ./config/application.yml

    - name: archive to tar.gz
      run: tar cvfz ./kafka-producer.tar.gz *

    - name: AWS configure credentials
      # aws 접속시 필요한 키 셋팅하는 사전 정의된 action 사용
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: ap-northeast-2

    - name: upload to S3
      run: aws s3 cp --region ap-northeast-2 ./kafka-producer.tar.gz s3://datalake-actions-deploy-kyun/kafka-producer/kafka-producer.tar.gz

    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name datalake_deploy
        --deployment-group-name kafka_deploy
        --s3-location bucket=datalake-actions-deploy-kyun,bundleType=tgz,key=kafka-producer/kafka-producer.tar.gz